/*
 * PercentageConfigForm.java
 *
 * Copyright (C) 2009 Olivier Sechet
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, see <http://www.gnu.org/licenses/>.
 */
package net.druppi.swing.table.format.categories;

import java.text.Format;
import java.text.NumberFormat;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import net.druppi.util.ResourceManager;



/**
 * Configuration panel of the PercentageCategory.
 *
 * @author Olivier Sechet
 * @version 1.0 - Apr 13, 2009
 */
@SuppressWarnings("serial")
class PercentageConfigForm extends ConfigPanel {

    /** The managed Format. */
    private NumberFormat format;

    /**
     * Creates new form PercentageConfigForm.
     */
    public PercentageConfigForm() {
        initComponents();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void setFormat(final Format format) {
        this.format = (NumberFormat) format;

        updateView();
    }

    /**
     * Updates the view.
     */
    private void updateView() {
        decimalSpinner.setValue(format.getMinimumFractionDigits());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        decimalLabel = new JLabel();
        decimalSpinner = new JSpinner();

        setName("Form"); // NOI18N

        decimalLabel.setText(ResourceManager.getResourceMap(getClass()).getString("PercentageConfigForm.decimalLabel.text")); // NOI18N
        decimalLabel.setName("decimalLabel"); // NOI18N

        decimalSpinner.setModel(new SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        decimalSpinner.setName("decimalSpinner"); // NOI18N
        decimalSpinner.setValue(2);
        decimalSpinner.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                decimalSpinnerStateChanged(evt);
            }
        });

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(decimalLabel)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(decimalSpinner, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(decimalLabel)
                    .addComponent(decimalSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when the spinner value changes.
     *
     * @param evt an event.
     */
    private void decimalSpinnerStateChanged(ChangeEvent evt) {//GEN-FIRST:event_decimalSpinnerStateChanged
        int decimal = (Integer) decimalSpinner.getValue();
        format.setMinimumFractionDigits(decimal);
        format.setMaximumFractionDigits(decimal);

        firePropertyChange(MODIFIED, false, true);
    }//GEN-LAST:event_decimalSpinnerStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel decimalLabel;
    private JSpinner decimalSpinner;
    // End of variables declaration//GEN-END:variables

}
