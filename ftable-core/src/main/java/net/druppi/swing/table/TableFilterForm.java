/*
 * TableFilterForm.java
 *
 * Copyright (C) 2009 Olivier Sechet
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, see <http://www.gnu.org/licenses/>.
 */
package net.druppi.swing.table;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;

import net.druppi.swing.FTable;
import net.druppi.util.ResourceManager;


/**
 * A TableFilterForm is a possible PropertiesPanel used to define several filtering
 * conditions. It uses the ConditionForm class to define the conditions.
 *
 * @author Olivier Sechet
 * @version 1.0 - Mar 24, 2009
 */
@SuppressWarnings("serial")
public class TableFilterForm extends PropertiesPanel {

    /** The associated FTable. */
    private FTable table;
    /** The visible ConditionForm. */
    private List<ConditionForm> panels = new ArrayList<ConditionForm>();
    /**
     * <code>true</code> if the filter is active. It is active if conditions are valid
     * when calling the apply method.
     */
    private boolean isFilterActive;

    /**
     * Creates new form TableFilterForm.
     *
     * @param table the associated table.
     */
    public TableFilterForm(final FTable table) {
        this.table = table;
        initComponents();

        addConditionPanel(null);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void init(JTable table) {
        // no op
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public final String getTitle() {
        return ResourceManager.getResourceMap(getClass()).getString("TableFilterForm.title"); //$NON-NLS-1$
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public final void apply() {
//        List<Filter> filters = new ArrayList<Filter>();
//
//        for (ConditionForm panel : panels) {
//            String text = panel.getText();
//            if (text.length() > 0) {
//                int columnIndex = panel.getColumnIndex();
//                int flag = panel.isCaseSensitive() ? 0 : Pattern.CASE_INSENSITIVE;
//
//                filters.add(new PatternFilter(text, flag, columnIndex));
//            }
//        }
//        if (filters.size() > 0) {
//            table.setFilters(new FilterPipeline(
//                    filters.toArray(new Filter[filters.size()])));
//            isFilterActive = true;
//        } else {
//            table.setFilters(null);
//            isFilterActive = false;
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conditionsPanel = new JPanel();
        cmdPanel = new JPanel();
        addButton = new JButton();
        deleteButton = new JButton();

        setName("Form"); // NOI18N
        setLayout(new BorderLayout());

        conditionsPanel.setName("conditionsPanel"); // NOI18N
        conditionsPanel.setLayout(new GridLayout(0, 1));
        add(conditionsPanel, BorderLayout.CENTER);

        cmdPanel.setName("cmdPanel"); // NOI18N

        addButton.setText(ResourceManager.getResourceMap(getClass()).getString("TableFilterForm.addButton.text")); // NOI18N
        addButton.setName("addButton"); // NOI18N
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addConditionPanel(evt);
            }
        });

        deleteButton.setText(ResourceManager.getResourceMap(getClass()).getString("TableFilterForm.deleteButton.text")); // NOI18N
        deleteButton.setName("deleteButton"); // NOI18N
        deleteButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                removeConditionPanel(evt);
            }
        });

        GroupLayout cmdPanelLayout = new GroupLayout(cmdPanel);
        cmdPanel.setLayout(cmdPanelLayout);
        cmdPanelLayout.setHorizontalGroup(
            cmdPanelLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, cmdPanelLayout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(addButton)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addContainerGap())
        );

        cmdPanelLayout.linkSize(SwingConstants.HORIZONTAL, new Component[] {addButton, deleteButton});

        cmdPanelLayout.setVerticalGroup(
            cmdPanelLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(cmdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmdPanelLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(addButton))
                .addContainerGap())
        );

        add(cmdPanel, BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Adds a new condition panel.
     *
     * @param evt an event.
     */
    private void addConditionPanel(ActionEvent evt) {//GEN-FIRST:event_addConditionPanel
        GridLayout layout = (GridLayout) conditionsPanel.getLayout();
        int number = layout.getRows() + 1;
        if (number <= 3) {
            layout.setRows(number);

            ConditionForm panel = new ConditionForm(number, table.getColumnModel());
            conditionsPanel.add(panel);
            panels.add(panel);

            conditionsPanel.revalidate();
            Container ancestor = getTopLevelAncestor();
            if (ancestor instanceof JFrame) {
                ((JFrame) ancestor).pack();
            } else if (ancestor instanceof JDialog) {
                ((JDialog) ancestor).pack();
            }

            addButton.setEnabled(number < 3);
        }
    }//GEN-LAST:event_addConditionPanel

    /**
     * Remove the last condition panel.
     *
     * @param evt an event.
     */
    private void removeConditionPanel(ActionEvent evt) {//GEN-FIRST:event_removeConditionPanel
        GridLayout layout = (GridLayout) conditionsPanel.getLayout();
        int index = layout.getRows() - 1;
        layout.setRows(index);

        conditionsPanel.remove(index);
        panels.remove(index);

        if (index == 0) {
            // Always have at least one panel
            addConditionPanel(null);
        }

        conditionsPanel.revalidate();
        Container ancestor = getTopLevelAncestor();
        if (ancestor instanceof JFrame) {
            ((JFrame) ancestor).pack();
        } else if (ancestor instanceof JDialog) {
            ((JDialog) ancestor).pack();
        }

        addButton.setEnabled(true);

        if (isFilterActive) {
            apply();
        }
    }//GEN-LAST:event_removeConditionPanel

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /** The add button. */
    private JButton addButton;
    /** The panel that contains the buttons. */
    private JPanel cmdPanel;
    /** The panel used to add new net.druppi.swing.table.ConditionForm. */
    private JPanel conditionsPanel;
    /** The delete button. */
    private JButton deleteButton;
    // End of variables declaration//GEN-END:variables

}
